# Depends on docker being installed.

---
# Fetch runner token via "Settings -> Actions -> Runners -> Create new Runner"
# Example Run:
# RUNNER_TOKEN="S6kJD4Ma8fpz5WBkNHgiZG8fQgT2dc0BgaUsssaK" docker compose up -d
apiVersion: v1
kind: Secret
metadata:
  name: gitea-runner-token
  namespace: default
type: Opaque
data:
  RUNNER_TOKEN: UzZrSkQ0TWE4ZnB6NVdCa05IZ2laRzhmUWdUMmRjMEJnYVVzc3NhSw==

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitea-sys-runner-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitea-sys-runner
  template:
    metadata:
      labels:
        app: gitea=sys-runner
    spec:
      privileged: true
      dnsConfig:
        nameservers: [ "192.168.1.5" ]
        searches: [ "lab" ]
      initContainers:
      - name: gitea-sys-runner-init
        image: gitea/act_runner:latest
        workingDir: /data
        env:
        - name: RUNNER_TOKEN
          valueFrom: { secretKeyRef: { name: gitea-runner-token, key: RUNNER_TOKEN } }
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            # Fetch and install certificate for init container.
            wget --no-check-certificate https://tls.lab/certs/root.crt -O /etc/ssl/certs/lab-root.crt
            cat /etc/ssl/certs/lab-root.crt >> /etc/ssl/certs/ca-certificates.crt
            
            # Generate config if non exists.
            if [ ! -e /data/config.yaml ]; then
              act_runner generate-config > /data/config.yaml
              # Remove some _very bad_ default config values.
              sed -i '/ubuntu/d' /data/config.yaml
            fi

            # Register runner if no registration found.
            if [ ! -e /data/.runner ]; then
              act_runner register --no-interactive \
                --instance https://git.lab \
                --token "${RUNNER_TOKEN}" \
                --name sys_runner \
                --labels sys_runner,nodejs,ansible,docker
            fi
        volumeMounts:
        - name: data-path
          mountPath: /data
      containers:
      - name: gitea-sys-runner
        #image: gitea/gitea:1.22.0-rc1
        image: git.lab/lab/gitea_sys_runner:latest
        env:
        - name: CONFIG_FILE
          value: /data/config.yaml
        volumeMounts:
        - name: data-path
          mountPath: /data
        - name: docker-socket
          mountPath: /var/run/docker.sock
        - name: ssh-key
          mountPath: /home/root/.ssh
      volumes:
      - name: data-path
        hostPath: { path: /opt/state/gitea_sys_runner/data }
      - name: docker-socket
        hostPath: { path: /var/run/docker.sock }
      - name: ssh-key
        hostPath: { path: /opt/imports/gitea_sys_runner/ssh }
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1